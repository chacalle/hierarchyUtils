% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interval_collapse.R
\name{collapse_common_intervals}
\alias{collapse_common_intervals}
\title{Collapse an interval variable to the most detailed common set of
intervals}
\usage{
collapse_common_intervals(
  dt,
  id_cols,
  value_cols,
  col_stem,
  agg_function = sum,
  missing_dt_severity = "stop",
  overlapping_dt_severity = "stop",
  include_missing = FALSE
)
}
\arguments{
\item{dt}{[\code{data.table()}]\cr
Dataset containing the interval variable.}

\item{id_cols}{[\code{character()}]\cr
ID columns that uniquely identify each row of \code{dt}.}

\item{value_cols}{[\code{character()}]\cr
Value columns that should be aggregated.}

\item{col_stem}{[\code{character(1)}]\cr
The name of the variable to collapse, should not include the '_start' or
'_end' suffix for the interval variable.}

\item{agg_function}{[\verb{function()}]\cr
Function to use when aggregating, can be either \code{sum} (for counts) or
\code{prod} (for probabilities).}

\item{missing_dt_severity}{[\code{character(1)}]\cr
How severe should the consequences of missing intervals that prevent
collapsing to the most detailed common set of intervals be? Can be either
'stop', 'warning', 'message', or 'none'. If not "stop", then only the
intervals that can be correctly collapsed will be done.}

\item{overlapping_dt_severity}{[\code{character(1)}]\cr
How severe should the consequences of overlapping intervals that change or
prevent collapsing to the most detailed common set of intervals be? Can be
either 'stop', 'warning', 'message', or 'none'. If not "stop", then
overlapping intervals will be dropped and the function continues.}

\item{include_missing}{[\code{logical(1)}]\cr
Whether to include missing intervals in the identified most detailed common
intervals. These missing intervals are not present in all combinations of
\code{id_cols}. Default is "FALSE".}
}
\value{
[\code{data.table()}] with \code{id_cols} and \code{value_cols} columns but with
the \code{col_stem} intervals reduced to only the most detailed common set of
intervals.
}
\description{
Collapse an interval variable to the most detailed common set of
intervals available for each combination of \code{id_cols} in a dataset.
Aggregates the collapsed dataset to the common set of intervals.
}
\examples{
id_cols <- c("year_start", "year_end", "sex", "age_start", "age_end")
value_cols <- c("value")

# set up test input data.table
input_dt_male <- data.table::CJ(year_start = 2005, year_end = 2010,
                                sex = "male",
                                age_start = seq(0, 95, 5),
                                value = 25)
input_dt_male[age_start == 95, value := 5]
input_dt_female <- data.table::CJ(year_start = 2005:2009,
                                  sex = "female",
                                  age_start = seq(0, 95, 1),
                                  value = 1)
gen_end(input_dt_female, setdiff(id_cols, c("year_end", "age_end")),
        col_stem = "year", right_most_endpoint = 2010)
input_dt <- rbind(input_dt_male, input_dt_female)
gen_end(input_dt, setdiff(id_cols, "age_end"), col_stem = "age")
data.table::setkeyv(input_dt, id_cols)


collapsed_dt <- collapse_common_intervals(
  dt = input_dt,
  id_cols = id_cols,
  value_cols = value_cols,
  col_stem = "year"
)
collapsed_dt <- collapse_common_intervals(
  dt = collapsed_dt,
  id_cols = id_cols,
  value_cols = value_cols,
  col_stem = "age"
)

}
