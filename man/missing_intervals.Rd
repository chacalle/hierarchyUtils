% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interval_assertions.R
\name{assert_no_missing_intervals}
\alias{assert_no_missing_intervals}
\alias{identify_missing_intervals}
\title{Is the interval variable missing any expected intervals?}
\usage{
assert_no_missing_intervals(ints_dt, expected_ints_dt)

identify_missing_intervals(ints_dt, expected_ints_dt)
}
\arguments{
\item{ints_dt}{[\code{data.table()}]\cr
Unique intervals. The first column represents the start of each interval
and the second column represents the end of each interval.}

\item{expected_ints_dt}{[\code{data.table()}]\cr
The expected intervals that should be completely included in \code{ints_dt}.
The first column represents the start of each interval and the second
column represents the end of each interval.}
}
\value{
\code{identify_missing_intervals} returns a [\code{data.table()}] with
columns for the 'start' and 'end' of the missing intervals. If no intervals
are missing then a zero-row [\code{data.table()}] is returned.
\code{assert_no_missing_intervals} returns nothing but throws an error if
\code{identify_missing_intervals} returns a non-empty data.table.
}
\description{
Checks to see if the input interval variable is missing any
expected intervals.
}
\examples{
ints_dt <- data.table::data.table(
  start = seq(0, 95, 5),
  end = c(seq(5, 95, 5), Inf)
)
missing_dt <- identify_missing_intervals(
  ints_dt = ints_dt[!start \%in\% c(0, 10, 95)],
  expected_ints_dt = data.table::data.table(start = 0, end = Inf)
)

}
