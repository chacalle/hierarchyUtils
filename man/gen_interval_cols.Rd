% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_interval_cols.R
\name{gen_end}
\alias{gen_end}
\alias{gen_length}
\alias{gen_name}
\title{Generate columns to help describe numeric variable intervals}
\usage{
gen_end(dt, id_cols, base_col, right_most_endpoint = Inf)

gen_length(dt, base_col)

gen_name(
  dt,
  base_col,
  format = "to",
  format_infinite = "plus",
  right_most_endpoint = Inf
)
}
\arguments{
\item{dt}{[\code{data.frame()}]\cr
\code{base_col}-specific data.}

\item{id_cols}{[\code{character()}]\cr
ID columns that uniquely identify each row of \code{dt}. This must include
\verb{\{base_col\}_start}.}

\item{base_col}{[\code{character(1)}]\cr
Base name of the numeric variable column. Does not include the '_start',
'_end' etc. suffix.}

\item{right_most_endpoint}{[\code{numeric(1)}]\cr
Assumed right most endpoint of \verb{\{base_col\}_end}. Default is \code{Inf}.}

\item{format}{[\code{character(1)}]\cr
Formatting style for the interval names. Default is 'to'; can also be
'interval' or 'dash'.}

\item{format_infinite}{[\code{character(1)}]\cr
Formatting style for infinite endpoint intervals. Default is 'plus'; can
also be '+'. Ignored when \code{format = "interval"}.}
}
\value{
Invisibly returns reference to modified \code{dt}.
}
\description{
demUtils assumes numeric variables are grouped into left-closed,
right-open intervals. \eqn{a <= x < b}. Each interval can be described by
their endpoints from which interval lengths and nicer formatted interval
names can be created.
}
\details{
\code{gen_end} generates a new column \verb{\{base_col\}_end} for the
right-open endpoint of each interval from a series of left-closed endpoints
\verb{\{base_col\}_start}.

\code{gen_end} assumes that only the most detailed intervals are present in the
input dataset; including overlapping intervals will not return expected
results.

Input data \code{dt} for \code{gen_end} must:
\itemize{
\item Contain columns specified in \code{id_cols}.
\item Contain a column called \verb{\{base_col\}_start}.
\item Have each row uniquely identified by each combination of \code{id_cols}.
}

\code{gen_length} generates a new column \verb{\{base_col\}_length} for the length of
each interval. Input data \code{dt} for \code{gen_length} must contain
\verb{\{base_col\}_start} and \verb{\{base_col\}_end} columns.

\code{gen_name} generates a new column \verb{\{base_col\}_name} describing each interval.

Formatting style for intervals:
\itemize{
\item \eqn{[a, b)} interval notation is used when \verb{format = 'interval}.
\item \verb{a to b} is used when \code{format = "to"}.
\item \code{a-b} is used when \code{format = "dash"}.
}

Formatting style for infinite endpoint interval:
\itemize{
\item \eqn{[a, Inf)} interval notation is used when \verb{format = 'interval}.
\item \verb{a plus} is used when \code{format_infinite = "plus"}.
\item \verb{a+} is used when \code{format = "+"}.
}
}
\examples{
input_dt <- data.table::data.table(location = "France", year = 2010,
                                   sex = "female",
                                   age_start = 0:95,
                                   value1 = 1, value2 = 2)
id_cols <- c("location", "year", "sex", "age_start")
gen_end(input_dt, id_cols, base_col = "age")
gen_length(input_dt, base_col = "age")
gen_name(input_dt, base_col = "age")

}
