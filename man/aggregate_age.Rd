% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_age.R
\name{aggregate_age}
\alias{aggregate_age}
\title{Aggregate age-specific counts to aggregate age groups}
\usage{
aggregate_age(dt, id_cols, value_cols, target_ages_dt)
}
\arguments{
\item{dt}{data.table with data to be aggregated.
\itemize{
\item must only contain columns specified in \code{id_cols} and \code{value_cols}.
\item must include 'age_start' and 'age_end' columns.
\item each combination of \code{id_cols} must uniquely identify each row.
}}

\item{id_cols}{character vector of id columns that uniquely identify each row
of \code{dt}.
\itemize{
\item must include 'age_start' and 'age_end'.
}}

\item{value_cols}{character vector of value columns to be aggregated.}

\item{target_ages_dt}{data.table defining age groups to aggregate to.
\itemize{
\item must include 'age_start' and 'age_end' columns.
}}
}
\value{
data.table with \code{id_cols} and \code{value_cols} columns for aggregate age
groups.
}
\description{
Aggregate age-specific counts to aggregate age groups
}
\examples{
input_dt <- data.table::data.table(year = 2010,
                                   age_start = seq(0, 95, 1),
                                   age_end = c(seq(1, 95, 1), 125),
                                   value1 = 1, value2 = 2)
target_dt <- data.table::data.table(age_start = c(0, 15, 85),
                                    age_end = c(5, 60, 125))
output_dt <- aggregate_age(input_dt,
                           id_cols = c("year", "age_start", "age_end"),
                           value_cols = c("value1", "value2"),
                           target_ages_dt = target_dt)
}
